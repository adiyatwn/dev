#!/usr/bin/env bash

# Exit on error
set -e

echo "=== Starting zsh setup ==="
echo "This script will install zsh and all required components for your configuration"

# Update package lists
echo "=== Updating package lists ==="
sudo apt update

# Install essential packages
echo "=== Installing essential packages ==="
sudo apt install -y zsh git curl wget unzip

# Install oh-my-zsh
echo "=== Installing Oh My Zsh ==="
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Install powerlevel10k theme
echo "=== Installing Powerlevel10k theme ==="
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

# Create custom plugins and completions directories
echo "=== Creating directories for plugins and completions ==="
mkdir -p ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins
mkdir -p $HOME/.zsh/completions

# Install required plugins
echo "=== Installing plugins ==="

# zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

# zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

# zsh-256color
git clone https://github.com/chrissicool/zsh-256color ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-256color

# zsh-completions
git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-completions

# Create p10k configuration file
echo "=== Creating p10k configuration ==="
p10k configure -n

# Copy over the zshrc file from the original configuration
echo "=== Setting up .zshrc ==="
cat > $HOME/.zshrc << 'EOF'
# Enable Powerlevel10k instant prompt
# This must be the first thing to ensure no output before instant prompt initialization
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Set up the environment variables
export VISUAL=nvim
export EDITOR=nvim
export PATH=$PATH:$HOME/.local/bin

# Path to oh-my-zsh installation
export ZSH=$HOME/.oh-my-zsh

# Theme setting
ZSH_THEME="powerlevel10k/powerlevel10k"

# List of plugins used
plugins=(git sudo zsh-256color zsh-autosuggestions zsh-syntax-highlighting)

# Load custom plugins
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

# Command not found handler (for package installation)
function command_not_found_handler {
    local purple='\e[1;35m' bright='\e[0;1m' green='\e[1;32m' reset='\e[0m'
    printf 'zsh: command not found: %s\n' "$1"
    local entries=( ${(f)"$(/usr/bin/pacman -F --machinereadable -- "/usr/bin/$1")"} )
    if (( ${#entries[@]} )) ; then
        printf "${bright}$1${reset} may be found in the following packages:\n"
        local pkg
        for entry in "${entries[@]}" ; do
            local fields=( ${(0)entry} )
            if [[ "$pkg" != "${fields[2]}" ]] ; then
                printf "${purple}%s/${bright}%s ${green}%s${reset}\n" "${fields[1]}" "${fields[2]}" "${fields[3]}"
            fi
            printf '    /%s\n' "${fields[4]}"
            pkg="${fields[2]}"
        done
    fi
    return 127
}

# Detect the AUR wrapper
if pacman -Qi yay &>/dev/null ; then
   aurhelper="yay"
elif pacman -Qi paru &>/dev/null ; then
   aurhelper="paru"
fi

# Function to install a package (from AUR or official repos)
function in {
    local pkg="$1"
    if pacman -Si "$pkg" &>/dev/null ; then
        sudo pacman -S "$pkg"
    else 
        "$aurhelper" -S "$pkg"
    fi
}


# Helpful aliases
alias l='eza -lh --icons=auto'   # long list
alias ls='eza -1 --icons=auto'   # short list
alias ll='eza -lha --icons=auto --sort=name --group-directories-first'  # long list all
alias ld='eza -lhD --icons=auto'  # long list dirs
alias un='$aurhelper -Rns'        # uninstall package
alias up='$aurhelper -Syu'        # update system/package/aur
alias pl='$aurhelper -Qs'         # list installed package
alias pa='$aurhelper -Ss'         # list available package
alias pc='$aurhelper -Sc'         # remove unused cache
alias po='$aurhelper -Qtdq | $aurhelper -Rns -'  # remove unused packages
alias v='nvim'                    # nvim alias
alias vim='nvim'                  # vim alias (use nvim instead)

# Key bindings (for custom actions)
bindkey -s '^f' '$HOME/scripts/tmux-sessionizer\n'

# Load Powerlevel10k settings if available
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Initialize zoxide (ensure zoxide is installed)
eval "$(zoxide init --cmd cd zsh)"

typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# fzf integration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$PATH:$HOME/.local/scripts/"
EOF

# Change default shell to zsh
echo "=== Changing default shell to zsh ==="
chsh -s $(which zsh)

echo "=== Setup completed! ==="
echo "Log out and log back in, or type 'zsh' to start using your new zsh configuration!"
echo "NOTE: Some paths might need adjustment based on your specific Digital Ocean server configuration."
